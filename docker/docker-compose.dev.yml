name: market-react-python
services:
  front-nextjs:
    container_name: front-nextjs
    depends_on:
      api-fastapi:
        condition: service_healthy
    build:
      context: ../
      dockerfile: docker/dockerfile.nextjs.dev
    ports:
      - "4000:4000"
    volumes:
      - ../react:/app
    working_dir: /app
    entrypoint: ["tail", "-f", "/dev/null"]
    networks:
      - outer-network

  api-fastapi:
    container_name: api-fastapi
    depends_on:
      db-postgresql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "healthcheck.py"]
      interval: 5s
      timeout: 5s
      retries: 10
    build:
      context: ../
      dockerfile: docker/dockerfile.fastapi.dev
    ports:
      - "8000:8000"
    volumes:
      - ../fastapi:/usr/src/app
    networks:
      - outer-network
      - inner-network

  dbm-adminer:
    container_name: dbm-adminer
    image: adminer:4.8.1
    depends_on:
      db-postgresql:
        condition: service_healthy
    restart: always
    ports:
      - 8080:8080
    networks:
      - outer-network
      - inner-network
  
  db-postgresql:
    container_name: db-postgresql
    image: postgres:15.2-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 3s
      timeout: 5s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=database
    # ports:
    #   - 5432:5432
    volumes:
      - ../postgres/data:/var/lib/postgresql/data
    networks:
      - inner-network

networks:
  outer-network:
  inner-network:
